name: Build

on:
  push:
    branches:
      - master
  pull_request:

jobs:
  imports:
    name: Imports
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: danhunsaker/golang-github-actions@v1.3.0
        with:
          run: imports
          token: ${{ secrets.GITHUB_TOKEN }}

  errcheck:
    name: Err Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: danhunsaker/golang-github-actions@v1.3.0
        with:
          run: errcheck
          token: ${{ secrets.GITHUB_TOKEN }}

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: danhunsaker/golang-github-actions@v1.3.0
        with:
          run: lint
          token: ${{ secrets.GITHUB_TOKEN }}

  shadow:
    name: Shadow
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: danhunsaker/golang-github-actions@v1.3.0
        with:
          run: shadow
          token: ${{ secrets.GITHUB_TOKEN }}

  staticcheck:
    name: Static Check
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: danhunsaker/golang-github-actions@v1.3.0
        with:
          run: staticcheck
          token: ${{ secrets.GITHUB_TOKEN }}

  sec:
    name: Sec
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - name: check
        uses: danhunsaker/golang-github-actions@v1.3.0
        with:
          run: sec
          token: ${{ secrets.GITHUB_TOKEN }}
          flags: "-exclude=G501"

  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.18.0-beta1' ]
    steps:
    - name: Checkout Code ${{ matrix.go }}
      uses: actions/checkout@v2

    - name: Setup Go ${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        stable: false
        go-version: ${{ matrix.go }}

    - name: Tidy and Vendor ${{ matrix.go }}
      run: |
        go get -u
        go mod tidy
        go mod vendor

    - name: Set Up GoTestFmt
      uses: haveyoudebuggedit/gotestfmt-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v2.0.0

    - name: Test ${{ matrix.go }}
      run: |
        set -euo pipefail
        go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
        
    - name: Upload test log
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-log
        path: /tmp/gotest.log
        if-no-files-found: error

    - name: Archive markdown artifacts
      uses: actions/upload-artifact@v3
      with:
        name: archive-markdown
        path: |
          docs