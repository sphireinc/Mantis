name: Build and Test

on:
  push:
    branches:
      - *
  pull_request:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go: [ '1.18.0-beta1' ]
    steps:
    - name: Checkout Code ${{ matrix.go }}
      uses: actions/checkout@v2

    - name: Setup Go ${{ matrix.go }}
      uses: actions/setup-go@v2
      with:
        stable: false
        go-version: ${{ matrix.go }}

    - name: Run Linter
      uses: golangci/golangci-lint-action@v3.1.0

    - name: Set Up gotestfmt
      uses: haveyoudebuggedit/gotestfmt-action@v2
      with:
        token: ${{ secrets.GITHUB_TOKEN }}
        version: v2.0.0
        org: haveyoudebuggedit
        repo: gotestfmt

    - name: Tidy ${{ matrix.go }}
      run: go mod tidy

    - name: Vendor ${{ matrix.go }}
      run: go mod vendor

    - name: Test ${{ matrix.go }}
      run: |
        set -euo pipefail
        go test -json -v ./... 2>&1 | tee /tmp/gotest.log | gotestfmt
        
    - name: Upload test log
      uses: actions/upload-artifact@v2
      if: always()
      with:
        name: test-log
        path: /tmp/gotest.log
        if-no-files-found: error

#  deploy:
#    runs-on: ubuntu-latest
#    strategy:
#      matrix:
#        go: [ '1.18.0-beta1' ]
#    steps:
#    - name: Start build deploy
#      uses: santoshkowshikhr/go-build-deploy@v1.1.0
#      with:
#        executable_name: go-executable
#        goos: linux
#        goarch: amd64
#        aws_region: us-east-1
#        aws_access_key_id: ${{ secrets.AWS_ACCESS_KEY_ID }
#        aws_secret_access_key: ${{ AWS_SECRET_ACCESS_KEY }}
#        s3_bucket: my-go-build
#        release_version: v1.1.1
#        push_to_s3: true
#        push_to_ec2: true
#        ec2_user: ubuntu
#        ec2_pass: ${{ secrets.password }}
#        ec2_ip: ${{ secrets.ec2_ip }}
#        ec2_path: /data